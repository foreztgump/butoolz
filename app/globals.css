@import "tailwindcss";

@layer base {
  :root {
    --background: 210 20% 99%;
    --foreground: 215 25% 30%;
    --card: 0 0% 100%;
    --card-foreground: 215 25% 30%;
    --popover: 0 0% 100%;
    --popover-foreground: 215 25% 30%;
    --primary: 250 75% 60%;
    --primary-foreground: 0 0% 100%;
    --secondary: 0 0% 99%;
    --secondary-foreground: 215 12% 65%;
    --muted: 0 0% 99%;
    --muted-foreground: 215 10% 75%;
    --accent: 210 40% 90%;
    --accent-foreground: 215 25% 30%;
    --destructive: 0 70% 50%;
    --destructive-foreground: 0 0% 100%;
    --border: 210 20% 99%;
    --input: 210 20% 88%;
    --ring: 250 75% 60%;
    --radius: 0.5rem;
    
    /* RGB values for primary color (124, 58, 237) - violet-600 - NOTE: This might need adjustment based on the new primary HSL */
    /* Let's calculate the new RGB for --primary: 250 75% 60% */
    /* HSL(250, 75%, 60%) => RGB(115, 77, 217) approx. */
    --primary-rgb: 115 77 217;
  }

  .dark {
    --background: 240 10% 4%;
    --foreground: 0 0% 98%;
    --card: 240 10% 6%;
    --card-foreground: 0 0% 98%;
    --popover: 240 10% 6%;
    --popover-foreground: 0 0% 98%;
    --primary: 250 95% 65%; /* Keep original dark mode primary */
    --primary-foreground: 240 5.9% 10%;
    --secondary: 240 3.7% 12%;
    --secondary-foreground: 0 0% 98%;
    --muted: 240 3.7% 12%;
    --muted-foreground: 240 5% 64.9%;
    --accent: 240 3.7% 15.9%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 240 3.7% 15.9%;
    --input: 240 3.7% 15.9%;
    --ring: 250 95% 65%; /* Keep original dark mode ring */
    
    /* RGB values for primary color (124, 58, 237) - violet-600 - Keep original for dark mode */
    --primary-rgb: 124 58 237;
  }
}

@layer base {
  * {
    border-color: hsl(var(--border));
  }
  body {
    background-color: hsl(var(--background));
    color: hsl(var(--foreground));
  }
}

/* Move custom styles into appropriate layers */
@layer components {
  .card-hover {
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 200ms;
  }
  .card-hover:hover {
    transform: scale(1.02);
    box-shadow: 0 10px 15px -3px rgba(var(--primary-rgb), 0.1), 0 4px 6px -2px rgba(var(--primary-rgb), 0.05);
    border-color: hsl(var(--primary));
  }

  /* Force styles for Radix Select, specifically for dark theme */
  html.dark [data-radix-select-content] { /* Reverted selector */
    /* Reverted background color */
    background-color: hsl(var(--popover)) !important; 
    border-color: hsl(var(--border)) !important;
    border-width: 1px !important;
    z-index: 999 !important;
  }

  /* Keep item override commented for now
  html.dark [data-radix-select-item][data-highlighted] {
    background-color: hsl(var(--border)) !important;
    color: hsl(var(--accent-foreground)) !important;
  }
  */
}
